# Lima VM Configuration for Gentoo ARM64 with ZFS
# For Gentoo maintainers who want maximum control
# M-series optimized from source

vmType: "vz"  # VZ for maximum M-series performance
os: "Linux"
arch: "aarch64"

images:
  # Custom Gentoo ISO (build with iso-builds/build-gentoo-m-series-iso.sh)
  # Or use stage3 and install manually
  - location: "https://distfiles.gentoo.org/releases/arm64/autobuilds/current-stage3-arm64-openrc/stage3-arm64-openrc-*.tar.xz"
    arch: "aarch64"
    # Or point to your custom ISO
    # - location: "/path/to/gentoo-m-series-20251023.iso"

cpus: 16  # Gentoo compiles fast with many cores
memory: "24GiB"  # Needed for parallel emerges
disk: "100GiB"  # Source builds need space

rosetta:
  enabled: false

mountType: "virtiofs"

mounts:
  - location: "~"
    writable: false
  - location: "/tmp/lima"
    writable: true

containerd:
  system: false
  user: false

networks:
  - vzNAT: true

provision:
  - mode: system
    script: |
      #!/bin/bash
      
      echo "=== Gentoo ARM64 M-series Setup ==="
      echo "System: $(uname -a)"
      
      # If booting from stage3, need to set up manually
      # This assumes you've extracted stage3 and chrooted
      
      # For custom ISO, these are pre-configured:
      echo "=== M-series Optimizations ==="
      echo "CFLAGS: -O3 -march=armv8.4-a+crypto+crc+fp+simd -mtune=cortex-a76"
      echo "MAKEOPTS: -j16"
      echo ""
      
      # Check if Portage is available
      if command -v emerge >/dev/null 2>&1; then
          echo "âœ“ Portage available"
          
          # Sync if needed
          emerge --sync || echo "Sync later"
          
          # Install ZFS
          echo "sys-fs/zfs ~arm64" >> /etc/portage/package.accept_keywords
          emerge sys-fs/zfs || echo "Build ZFS manually"
          
          # Load ZFS
          modprobe zfs || echo "ZFS not built yet"
          
      else
          echo "âš  Manual Gentoo installation needed"
          echo ""
          echo "Steps:"
          echo "1. Extract stage3"
          echo "2. Chroot"
          echo "3. Emerge @world"
          echo "4. Build M-series kernel"
          echo "5. Emerge ZFS"
      fi

message: |
  ðŸ”¥ GENTOO M-SERIES: Maximum Customization! ðŸ”¥
  
  As a Gentoo maintainer, you have full control:
  
  M-series Optimization:
  - CFLAGS optimized for ARMv8.4-A+
  - All packages compiled from source
  - Maximum performance tuning
  - Native ZFS from source
  
  Build Config:
  - 16 CPUs for parallel compilation
  - 24GB RAM for large emerges
  - 100GB disk for Portage + sources
  - VZ backend (2x faster than QEMU)
  
  Advantages:
  âœ“ Everything compiled for M-series specifically
  âœ“ No generic ARM binaries
  âœ“ Hardware crypto in all packages
  âœ“ Custom USE flags
  âœ“ Bleeding edge + stable (your choice)
  
  Quick Start:
  1. Boot this VM
  2. If using stage3: extract and chroot
  3. If using custom ISO: already configured!
  4. emerge @world (grab coffee, this takes hours)
  5. Build M-series kernel
  6. emerge sys-fs/zfs
  
  Or use pre-built ISO:
  - Run: ./iso-builds/build-gentoo-m-series-iso.sh
  - Wait 2-3 hours
  - Get bootable ISO with everything pre-compiled
  
  Access:
  limactl shell gentoo-arm64
  
  This is Gentoo. You know what to do. ðŸ˜Ž
