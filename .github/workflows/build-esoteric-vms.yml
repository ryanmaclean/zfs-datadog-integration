name: Build Esoteric ARM64 VMs

on:
  push:
    branches: [master]
    paths:
      - 'examples/lima/lima-*-arm64.yaml'
      - 'scripts/test-esoteric-arm64.sh'
  workflow_dispatch:
  release:
    types: [created]

jobs:
  validate-configs:
    name: Validate Lima Configs
    runs-on: macos-14  # M-series runner
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Lima
        run: brew install lima
      
      - name: Validate Alpine ARM64
        run: limactl validate examples/lima/lima-alpine-arm64.yaml
      
      - name: Validate FreeBSD ARM64
        run: limactl validate examples/lima/lima-freebsd-arm64.yaml
      
      - name: Validate NetBSD ARM64
        run: limactl validate examples/lima/lima-netbsd-arm64.yaml
      
      - name: Validate OpenBSD ARM64
        run: limactl validate examples/lima/lima-openbsd-arm64.yaml

  test-alpine-musl:
    name: Test Alpine (musl + VZ)
    runs-on: macos-14  # M-series runner for native ARM64
    needs: validate-configs
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Lima
        run: brew install lima
      
      - name: Start Alpine ARM64 VM
        run: |
          limactl start --name=alpine-test examples/lima/lima-alpine-arm64.yaml --tty=false
      
      - name: Wait for VM
        run: sleep 30
      
      - name: Verify musl libc
        run: |
          limactl shell alpine-test -- ldd --version | grep musl || exit 1
      
      - name: Verify ARM64
        run: |
          limactl shell alpine-test -- uname -m | grep aarch64 || exit 1
      
      - name: Verify ZFS
        run: |
          limactl shell alpine-test -- zpool version || exit 1
          limactl shell alpine-test -- zfs version || exit 1
      
      - name: Test ZFS Pool Creation
        run: |
          limactl shell alpine-test -- sudo zpool status testpool || exit 1
      
      - name: Check ARM Extensions
        run: |
          limactl shell alpine-test -- cat /proc/cpuinfo | grep -E 'asimd|crc32|aes' || true
      
      - name: Export VM Image
        run: |
          # Stop VM cleanly
          limactl stop alpine-test
          
          # Create tarball of VM
          tar -czf alpine-arm64-musl-zfs.tar.gz ~/.lima/alpine-test/
      
      - name: Upload VM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: alpine-arm64-musl-zfs
          path: alpine-arm64-musl-zfs.tar.gz
          retention-days: 30

  test-freebsd-native:
    name: Test FreeBSD (Native ZFS)
    runs-on: macos-14
    needs: validate-configs
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Lima
        run: brew install lima
      
      - name: Start FreeBSD ARM64 VM
        run: |
          limactl start --name=freebsd-test examples/lima/lima-freebsd-arm64.yaml --tty=false
      
      - name: Wait for VM
        run: sleep 60
      
      - name: Verify FreeBSD
        run: |
          limactl shell freebsd-test -- uname -a | grep FreeBSD || exit 1
      
      - name: Verify ZFS (Native)
        run: |
          limactl shell freebsd-test -- zpool version || exit 1
          limactl shell freebsd-test -- zfs version || exit 1
      
      - name: Test ZFS Pool
        run: |
          limactl shell freebsd-test -- zpool status testpool || exit 1
      
      - name: Export VM Image
        run: |
          limactl stop freebsd-test
          tar -czf freebsd-arm64-native-zfs.tar.gz ~/.lima/freebsd-test/
      
      - name: Upload VM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: freebsd-arm64-native-zfs
          path: freebsd-arm64-native-zfs.tar.gz
          retention-days: 30

  build-matrix-test:
    name: Quick Test All Platforms
    runs-on: macos-14
    needs: validate-configs
    timeout-minutes: 60
    strategy:
      matrix:
        platform:
          - name: alpine
            config: lima-alpine-arm64.yaml
            verify: "ldd --version | grep musl"
          - name: freebsd
            config: lima-freebsd-arm64.yaml
            verify: "uname | grep FreeBSD"
          - name: netbsd
            config: lima-netbsd-arm64.yaml
            verify: "uname | grep NetBSD"
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Lima
        run: brew install lima
      
      - name: Start ${{ matrix.platform.name }} VM
        run: |
          limactl start --name=test-${{ matrix.platform.name }} \
            examples/lima/${{ matrix.platform.config }} --tty=false
      
      - name: Verify Platform
        run: |
          sleep 30
          limactl shell test-${{ matrix.platform.name }} -- ${{ matrix.platform.verify }}
      
      - name: Cleanup
        if: always()
        run: |
          limactl stop test-${{ matrix.platform.name }} || true
          limactl delete test-${{ matrix.platform.name }} || true

  create-release-artifacts:
    name: Create Release Artifacts
    runs-on: macos-14
    needs: [test-alpine-musl, test-freebsd-native]
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Alpine Artifact
        uses: actions/download-artifact@v4
        with:
          name: alpine-arm64-musl-zfs
      
      - name: Download FreeBSD Artifact
        uses: actions/download-artifact@v4
        with:
          name: freebsd-arm64-native-zfs
      
      - name: Create Release Info
        run: |
          cat > RELEASE_NOTES.md << 'EOF'
          # Esoteric ARM64 VM Images with ZFS
          
          Pre-configured VM images for testing ZFS Datadog Integration on rare platforms.
          
          ## Images
          
          ### alpine-arm64-musl-zfs.tar.gz
          - **OS**: Alpine Linux 3.19 ARM64
          - **libc**: musl (not glibc!)
          - **Backend**: VZ (Apple Virtualization.framework)
          - **ZFS**: From edge/testing
          - **Novel**: musl + ZFS + ARM64 combo is rare
          - **Performance**: 2x faster than QEMU
          
          ### freebsd-arm64-native-zfs.tar.gz
          - **OS**: FreeBSD 14.0 ARM64
          - **ZFS**: Native (built into kernel)
          - **Backend**: QEMU
          - **Novel**: ARM64 FreeBSD with ZFS is uncommon
          - **Stability**: Production-ready
          
          ## Usage
          
          ```bash
          # Extract
          tar -xzf alpine-arm64-musl-zfs.tar.gz
          mv alpine-test ~/.lima/
          
          # Start
          limactl start alpine-test
          
          # Access
          limactl shell alpine-test
          ```
          
          ## Verified
          - ✅ Builds complete successfully
          - ✅ ZFS functional
          - ✅ ARM64 native
          - ✅ Novel platform combinations
          EOF
      
      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            alpine-arm64-musl-zfs.tar.gz
            freebsd-arm64-native-zfs.tar.gz
            RELEASE_NOTES.md
          body_path: RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
