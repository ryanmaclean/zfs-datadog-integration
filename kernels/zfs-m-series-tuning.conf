# ZFS Module Parameters for M-series (M1-M5)
# /etc/modprobe.d/zfs-m-series.conf

# ARC (Adaptive Replacement Cache) - Optimized for unified memory
# M-series has fast unified memory, so we can be aggressive

# ARC size limits
# M1/M2: 8-16GB unified memory → 4GB ARC
# M3/M4: 16-32GB unified memory → 8GB ARC  
# M5: 32-64GB unified memory → 16GB ARC
options zfs zfs_arc_max=17179869184  # 16GB (adjust based on total RAM)
options zfs zfs_arc_min=4294967296   # 4GB minimum

# ARC meta limit (metadata cache)
options zfs zfs_arc_meta_limit=4294967296  # 4GB for metadata

# Prefetch - Aggressive (NVMe is fast, unified memory is fast)
options zfs zfs_prefetch_disable=0
options zfs zfs_arc_max_prefetch_shift=4  # Prefetch up to 1/16 of ARC

# L2ARC - Disable (unified memory is already fast, no need for L2)
options zfs l2arc_write_max=0
options zfs l2arc_headroom=0

# Checksums - Use hardware acceleration
# M-series has SHA-256 and CRC32 acceleration
options zfs zfs_fletcher_4_impl=scalar  # Let hardware handle it
options zfs zfs_checksum_impl=fastest   # Auto-select fastest (hardware)

# Compression - Hardware-accelerated where possible
# LZ4 is fast and M-series can handle it well
options zfs zfs_compress_impl=lz4

# Record size - Larger for fast NVMe
options zfs zfs_max_recordsize=16777216  # 16MB (NVMe can handle it)

# Transaction groups - Faster commits on NVMe
options zfs zfs_txg_timeout=5  # 5 seconds (vs default 30)
options zfs zfs_vdev_async_write_active_min_dirty_percent=30
options zfs zfs_vdev_async_write_active_max_dirty_percent=60

# Dedup - Disable by default (memory is better used for ARC)
# If needed, use verify=yes (hardware checksums are fast)
options zfs zfs_dedup_prefetch=1

# I/O scheduler - NVMe specific
options zfs zfs_vdev_scheduler=none  # NVMe has its own scheduling

# Write throttling - Aggressive (fast NVMe)
options zfs zfs_delay_min_dirty_percent=60
options zfs zfs_delay_scale=500000

# Scrub/resilver - Fast on NVMe
options zfs zfs_resilver_min_time_ms=1000  # 1 second
options zfs zfs_scrub_min_time_ms=1000     # 1 second
options zfs zfs_scan_vdev_limit=16777216   # 16MB/s per vdev

# Metadata - Special allocation (use ramdisk if available)
options zfs metaslab_debug_load=1
options zfs zfs_mg_fragmentation_threshold=85

# Async destroy - Fast deletion
options zfs zfs_async_block_max_blocks=100000

# DNE (Directory Name Entry) cache - Aggressive
options zfs zfs_arc_dnode_limit=4294967296  # 4GB for dnodes

# M-series specific optimizations
# CRC32 - Use hardware (Apple Silicon has ARMv8 CRC32 instructions)
options zfs zfs_crc32c_impl=fastest  # Auto-detect hardware

# DMU (Data Management Unit) - Optimize for unified memory
options zfs zfs_dmu_offset_next_sync=1

# Ramdisk for ZFS intent log (ZIL) - Optional but fast on M-series
# Create ramdisk: zpool add poolname log /dev/ram0
# Unified memory makes this very fast

# Comments for different M-series tiers:
# M1 (8-16GB): Use conservative settings (8GB ARC max)
# M2 (8-24GB): Use moderate settings (12GB ARC max)
# M3 (18-36GB): Use aggressive settings (16GB ARC max)
# M4 (16-48GB): Use very aggressive (24GB ARC max)
# M5 (16-64GB): Maximum settings (32GB ARC max)
